var documenterSearchIndex = {"docs":
[{"location":"API/electrical/#ModelingToolkitStandardLibrary:-Electrical-Components","page":"Electrical Components","title":"ModelingToolkitStandardLibrary: Electrical Components","text":"","category":"section"},{"location":"API/electrical/#Electrical-Utilities","page":"Electrical Components","title":"Electrical Utilities","text":"","category":"section"},{"location":"API/electrical/","page":"Electrical Components","title":"Electrical Components","text":"Pin","category":"page"},{"location":"API/electrical/#ModelingToolkitStandardLibrary.Electrical.Pin","page":"Electrical Components","title":"ModelingToolkitStandardLibrary.Electrical.Pin","text":"Port for an electrical system.\n\n\n\n\n\n","category":"function"},{"location":"API/electrical/#Analog-Components","page":"Electrical Components","title":"Analog Components","text":"","category":"section"},{"location":"API/electrical/","page":"Electrical Components","title":"Electrical Components","text":"Capacitor\nGround\nInductor\nResistor\nShort\nIdealOpAmp","category":"page"},{"location":"API/electrical/#ModelingToolkitStandardLibrary.Electrical.Capacitor","page":"Electrical Components","title":"ModelingToolkitStandardLibrary.Electrical.Capacitor","text":"Capacitor(;name, C=1.0, v_start=0.0)\n\nIdeal linear electrical capacitor.\n\nParameters:\n\nC: [F] Capacity\nv_start: [V] Initial voltage of capacitor\n\n\n\n\n\n","category":"function"},{"location":"API/electrical/#ModelingToolkitStandardLibrary.Electrical.Inductor","page":"Electrical Components","title":"ModelingToolkitStandardLibrary.Electrical.Inductor","text":"Inductor(;name, L=1.0e-6, i_start=0.0)\n\nIdeal linear electrical inductor.\n\nParameters:\n\nL: [H] Inductance\ni_start: [A] Initial current through inductor\n\n\n\n\n\n","category":"function"},{"location":"API/electrical/#ModelingToolkitStandardLibrary.Electrical.Resistor","page":"Electrical Components","title":"ModelingToolkitStandardLibrary.Electrical.Resistor","text":"Resistor(;name, R=1.0)\n\nIdeal linear electrical resistor.\n\nParameters:\n\nR: [Î©] Resistance\n\n\n\n\n\n","category":"function"},{"location":"API/electrical/#ModelingToolkitStandardLibrary.Magnetic.FluxTubes.Short","page":"Electrical Components","title":"ModelingToolkitStandardLibrary.Magnetic.FluxTubes.Short","text":"Short(;name)\n\nShort cut branch.\n\n\n\n\n\n","category":"function"},{"location":"API/electrical/#ModelingToolkitStandardLibrary.Electrical.IdealOpAmp","page":"Electrical Components","title":"ModelingToolkitStandardLibrary.Electrical.IdealOpAmp","text":"IdealOpAmp(;name)\n\nIdeal operational amplifier (norator-nullator pair). The ideal OpAmp is a two-port. The left port is fixed to v1=0 and i1=0 (nullator).  At the right port both any voltage v2 and any current i2 are possible (norator).\n\n\n\n\n\n","category":"function"},{"location":"API/electrical/#Analog-Sensors","page":"Electrical Components","title":"Analog Sensors","text":"","category":"section"},{"location":"API/electrical/","page":"Electrical Components","title":"Electrical Components","text":"CurrentSensor\nPotentialSensor\nVoltageSensor\nPowerSensor\nMultiSensor","category":"page"},{"location":"API/electrical/#ModelingToolkitStandardLibrary.Electrical.CurrentSensor","page":"Electrical Components","title":"ModelingToolkitStandardLibrary.Electrical.CurrentSensor","text":"CurrentSensor(; name)\n\nSensor to measure the current through a branch in amperes.\n\n\n\n\n\n","category":"function"},{"location":"API/electrical/#ModelingToolkitStandardLibrary.Electrical.PotentialSensor","page":"Electrical Components","title":"ModelingToolkitStandardLibrary.Electrical.PotentialSensor","text":"PotentialSensor(; name)\n\nSensor to measure the potential in volt.\n\n\n\n\n\n","category":"function"},{"location":"API/electrical/#ModelingToolkitStandardLibrary.Electrical.VoltageSensor","page":"Electrical Components","title":"ModelingToolkitStandardLibrary.Electrical.VoltageSensor","text":"VoltageSensor(; name)\n\nSensor to measure the potential difference between two pins in volt.\n\n\n\n\n\n","category":"function"},{"location":"API/electrical/#ModelingToolkitStandardLibrary.Electrical.PowerSensor","page":"Electrical Components","title":"ModelingToolkitStandardLibrary.Electrical.PowerSensor","text":"PowerSensor(; name)\n\nSensor to measure the power in watt.\n\n\n\n\n\n","category":"function"},{"location":"API/electrical/#ModelingToolkitStandardLibrary.Electrical.MultiSensor","page":"Electrical Components","title":"ModelingToolkitStandardLibrary.Electrical.MultiSensor","text":"MultiSensor(; name)\n\nSensor to measure current [A], voltage [V] and power [W].\n\n\n\n\n\n","category":"function"},{"location":"API/electrical/#Analogue-Sources","page":"Electrical Components","title":"Analogue Sources","text":"","category":"section"},{"location":"API/electrical/","page":"Electrical Components","title":"Electrical Components","text":"ConstantVoltage\nSineVoltage\nStepVoltage\nRampVoltage\nSquareVoltage\nTriangularVoltage\nCosineVoltage\nExpSineVoltage\nConstantCurrent\nSineCurrent\nStepCurrent\nRampCurrent\nSquareCurrent\nTriangularCurrent\nCosineCurrent\nExpSineCurrent","category":"page"},{"location":"API/electrical/#ModelingToolkitStandardLibrary.Electrical.ConstantVoltage","page":"Electrical Components","title":"ModelingToolkitStandardLibrary.Electrical.ConstantVoltage","text":"ConstantVoltage(;name, V = 1.0)\n\nSource for constant voltage,\n\nParameters:\n\nV: [V] Voltage\n\n\n\n\n\n","category":"function"},{"location":"API/electrical/#ModelingToolkitStandardLibrary.Electrical.SineVoltage","page":"Electrical Components","title":"ModelingToolkitStandardLibrary.Electrical.SineVoltage","text":"SineVoltage(;name, offset=0.0, amplitude=1.0, frequency=1.0, start_time=0.0, phase=0.0)\n\nGenerate sine voltage.\n\nParameters:\n\nfrequency: [Hz] Frequency of sine wave\namplitude: [V] Amplitude of sine wave\nphase: [rad] Phase of sine wave \noffset: [V] Offset of output voltage\nstart_time: [s] Output y = offset for t < start_time\n\n\n\n\n\n","category":"function"},{"location":"API/electrical/#ModelingToolkitStandardLibrary.Electrical.StepVoltage","page":"Electrical Components","title":"ModelingToolkitStandardLibrary.Electrical.StepVoltage","text":"StepVoltage(;name, offset=0.0, start_time=0.0, height=1.0)\n\nGenerate step voltage.\n\nParameters:\n\nheight: [V] Height of step\noffset: [V] Offset of output voltage\nstart_time: [s] Output y = offset for t < start_time\n\n\n\n\n\n","category":"function"},{"location":"API/electrical/#ModelingToolkitStandardLibrary.Electrical.RampVoltage","page":"Electrical Components","title":"ModelingToolkitStandardLibrary.Electrical.RampVoltage","text":"RampVoltage(;name, offset=0.0, start_time=0.0, duration=1.0, height=1.0)\n\nGenerate ramp voltage.\n\nParameters:\n\nheight: [V] Height of ramp\nduration: [s] Duration of ramp (= 0.0 gives a Step)\noffset: [V] Offset of output voltage\nstart_time: [s] Output y = offset for t < start_time\n\n\n\n\n\n","category":"function"},{"location":"API/electrical/#ModelingToolkitStandardLibrary.Electrical.SquareVoltage","page":"Electrical Components","title":"ModelingToolkitStandardLibrary.Electrical.SquareVoltage","text":"SquareVoltage(; name, offset=0.0, amplitude=1.0, frequency=1.0, start_time=0.0)\n\nGenerate square voltage.\n\n\n\n\n\n","category":"function"},{"location":"API/electrical/#ModelingToolkitStandardLibrary.Electrical.CosineVoltage","page":"Electrical Components","title":"ModelingToolkitStandardLibrary.Electrical.CosineVoltage","text":"CosineVoltage(;name, offset=0.0, amplitude=1.0, frequency=1.0, start_time=0.0, phase=0.0)\n\nGenerate cosine voltage.\n\nParameters:\n\nfrequency: [Hz] Frequency of sine wave\namplitude: [V] Amplitude of sine wave\nphase: [rad] Phase of sine wave \noffset: [V] Offset of output voltage\nstart_time: [s] Output y = offset for t < start_time\n\n\n\n\n\n","category":"function"},{"location":"API/electrical/#ModelingToolkitStandardLibrary.Electrical.ExpSineVoltage","page":"Electrical Components","title":"ModelingToolkitStandardLibrary.Electrical.ExpSineVoltage","text":"Generate damped sine voltage.\n\nParameters:\n\nfrequency: [Hz] Frequency of sine wave\namplitude: [V] Amplitude of sine wave\ndamping: [1/s] Damping coefficient of sine wave\nphase: [rad] Phase of sine wave \noffset: [V] Offset of output voltage\nstart_time: [s] Output y = offset for t < start_time\n\n\n\n\n\n","category":"function"},{"location":"API/electrical/#ModelingToolkitStandardLibrary.Electrical.ConstantCurrent","page":"Electrical Components","title":"ModelingToolkitStandardLibrary.Electrical.ConstantCurrent","text":"ConstantCurrent(;name, I = 1.0)\n\nSource for constant current.\n\nParameters:\n\nI: [A] Current\n\n\n\n\n\n","category":"function"},{"location":"API/electrical/#ModelingToolkitStandardLibrary.Electrical.SineCurrent","page":"Electrical Components","title":"ModelingToolkitStandardLibrary.Electrical.SineCurrent","text":"SineCurrent(;name, offset=0.0, amplitude=1.0, frequency=1.0, start_time=0.0, phase=0.0)\n\nGenerate sine current.\n\nParameters:\n\nfrequency: [Hz] Frequency of sine wave\namplitude: [A] Amplitude of sine wave\nphase: [rad] Phase of sine wave \noffset: [A] Offset of output current\nstart_time: [s] Output y = offset for t < start_time\n\n\n\n\n\n","category":"function"},{"location":"API/electrical/#ModelingToolkitStandardLibrary.Electrical.StepCurrent","page":"Electrical Components","title":"ModelingToolkitStandardLibrary.Electrical.StepCurrent","text":"StepCurrent(;name, offset=0.0, start_time=0.0, height=1.0)\n\nGenerate step current.\n\nParameters:\n\nheight: [A] Height of step\noffset: [A] Offset of output current\nstart_time: [s] Output y = offset for t < start_time\n\n\n\n\n\n","category":"function"},{"location":"API/electrical/#ModelingToolkitStandardLibrary.Electrical.RampCurrent","page":"Electrical Components","title":"ModelingToolkitStandardLibrary.Electrical.RampCurrent","text":"RampCurrent(;name, offset=0.0, start_time=0.0, duration=1.0, height=1.0)\n\nGenerate ramp current.\n\nParameters:\n\nheight: [A] Height of ramp\nduration: [s] Duration of ramp (= 0.0 gives a Step)\noffset: [A] Offset of output current\nstart_time: [s] Output y = offset for t < start_time\n\n\n\n\n\n","category":"function"},{"location":"API/electrical/#ModelingToolkitStandardLibrary.Electrical.CosineCurrent","page":"Electrical Components","title":"ModelingToolkitStandardLibrary.Electrical.CosineCurrent","text":"CosineCurrent(;name, offset=0.0, amplitude=1.0, frequency=1.0, start_time=0.0, phase=0.0)\n\nGenerate cosine current.\n\nParameters:\n\nfrequency: [Hz] Frequency of sine wave\namplitude: [A] Amplitude of sine wave\nphase: [rad] Phase of sine wave \noffset: [A] Offset of output current\nstart_time: [s] Output y = offset for t < start_time\n\n\n\n\n\n","category":"function"},{"location":"API/electrical/#ModelingToolkitStandardLibrary.Electrical.ExpSineCurrent","page":"Electrical Components","title":"ModelingToolkitStandardLibrary.Electrical.ExpSineCurrent","text":"ExpSineCurrent(;name, offset=0.0, amplitude=1.0, frequency=1.0, start_time=0.0, phase=0.0, damping=0.0)\n\nGenerate damped sine current.\n\nParameters:\n\nfrequency: [Hz] Frequency of sine wave\namplitude: [A] Amplitude of sine wave\ndamping: [1/s] Damping coefficient of sine wave\nphase: [rad] Phase of sine wave \noffset: [A] Offset of output current\nstart_time: [s] Output y = offset for t < start_time\n\n\n\n\n\n","category":"function"},{"location":"tutorials/rc_circuit/#RC-Circuit-Model","page":"RC Circuit","title":"RC Circuit Model","text":"","category":"section"},{"location":"tutorials/rc_circuit/","page":"RC Circuit","title":"RC Circuit","text":"This tutorial is a simplified version of the RC circuit tutorial in the ModelingToolkit.jl documentation. In that tutorial, the full RC circuit is built from scratch. Here, we will use the components of the Electrical model in the ModelingToolkit Standard Library to simply connect pre-made components and simulate the model.","category":"page"},{"location":"tutorials/rc_circuit/","page":"RC Circuit","title":"RC Circuit","text":"using ModelingToolkit, OrdinaryDiffEq, Plots\nusing ModelingToolkitStandardLibrary.Electrical\n\nR = 1.0\nC = 1.0\nV = 1.0\n@variables t\n@named resistor = Resistor(R=R)\n@named capacitor = Capacitor(C=C)\n@named source = ConstantVoltage(V=V)\n@named ground = Ground()\n\nrc_eqs = [\n        connect(source.p, resistor.p)\n        connect(resistor.n, capacitor.p)\n        connect(capacitor.n, source.n, ground.g)\n        ]\n\n@named rc_model = ODESystem(rc_eqs, t, systems=[resistor, capacitor, source, ground])\nsys = structural_simplify(rc_model)\nprob = ODAEProblem(sys, Pair[], (0, 10.0))\nsol = solve(prob, Tsit5())\nplot(sol, vars = [capacitor.v,resistor.i],\n     title = \"RC Circuit Demonstration\",\n     labels = [\"Capacitor Voltage\" \"Resistor Current\"])\nsavefig(\"plot.png\")","category":"page"},{"location":"tutorials/rc_circuit/","page":"RC Circuit","title":"RC Circuit","text":"(Image: )","category":"page"},{"location":"API/blocks/#ModelingToolkitStandardLibrary:-Blocks","page":"Blocks","title":"ModelingToolkitStandardLibrary: Blocks","text":"","category":"section"},{"location":"API/blocks/#Utility-Blocks","page":"Blocks","title":"Utility Blocks","text":"","category":"section"},{"location":"API/blocks/","page":"Blocks","title":"Blocks","text":"RealInput\nRealOutput\nSISO","category":"page"},{"location":"API/blocks/#Math-Blocks","page":"Blocks","title":"Math Blocks","text":"","category":"section"},{"location":"API/blocks/","page":"Blocks","title":"Blocks","text":"Gain\nSum\nMatrixGain\nSum\nFeedback\nAdd\nProduct\nDivision\nAbs\nSign\nSqrt\nSin\nCos\nTan\nAsin\nAcos\nAtan\nAtan2\nSinh\nCosh\nTanh\nExp\nLog\nLog10","category":"page"},{"location":"API/blocks/#ModelingToolkitStandardLibrary.Blocks.Gain","page":"Blocks","title":"ModelingToolkitStandardLibrary.Blocks.Gain","text":"Gain(k=1; name)\n\nOutput the product of a gain value with the input signal.\n\nParameters:\n\nk: Scalar gain\n\n\n\n\n\n","category":"function"},{"location":"API/blocks/#ModelingToolkitStandardLibrary.Blocks.Sum","page":"Blocks","title":"ModelingToolkitStandardLibrary.Blocks.Sum","text":"Sum(n::Int; name)\n\nOutput the sum of the elements of the input port vector.\n\nParameters:\n\nn: Input port dimension\n\n\n\n\n\n","category":"function"},{"location":"API/blocks/#ModelingToolkitStandardLibrary.Blocks.MatrixGain","page":"Blocks","title":"ModelingToolkitStandardLibrary.Blocks.MatrixGain","text":"MatrixGain(K::AbstractArray; name)\n\nOutput the product of a gain matrix with the input signal vector.\n\nParameters:\n\nK: Matrix gain\n\n\n\n\n\n","category":"function"},{"location":"API/blocks/#ModelingToolkitStandardLibrary.Blocks.Feedback","page":"Blocks","title":"ModelingToolkitStandardLibrary.Blocks.Feedback","text":"Feedback(;name)\n\nOutput difference between reference input (input1) and feedback input (input2).\n\n\n\n\n\n","category":"function"},{"location":"API/blocks/#ModelingToolkitStandardLibrary.Blocks.Add","page":"Blocks","title":"ModelingToolkitStandardLibrary.Blocks.Add","text":"Add(;name, k1=1, k2=1)\n\nOutput the sum of the two scalar inputs.\n\nParameters:\n\nk1: Gain for first input\nk2: Gain for second input\n\n\n\n\n\n","category":"function"},{"location":"API/blocks/#ModelingToolkitStandardLibrary.Blocks.Product","page":"Blocks","title":"ModelingToolkitStandardLibrary.Blocks.Product","text":"Product(;name)\n\nOutput product of the two inputs.\n\n\n\n\n\n","category":"function"},{"location":"API/blocks/#ModelingToolkitStandardLibrary.Blocks.Division","page":"Blocks","title":"ModelingToolkitStandardLibrary.Blocks.Division","text":"Division(;name)\n\nOutput first input divided by second input.\n\n\n\n\n\n","category":"function"},{"location":"API/blocks/#ModelingToolkitStandardLibrary.Blocks.Abs","page":"Blocks","title":"ModelingToolkitStandardLibrary.Blocks.Abs","text":"Abs(;name)\n\nOutput the absolute value of the input.\n\n\n\n\n\n","category":"function"},{"location":"API/blocks/#ModelingToolkitStandardLibrary.Blocks.Sign","page":"Blocks","title":"ModelingToolkitStandardLibrary.Blocks.Sign","text":"Sign(;name)\n\nOutput the sign of the input\n\n\n\n\n\n","category":"function"},{"location":"API/blocks/#ModelingToolkitStandardLibrary.Blocks.Sqrt","page":"Blocks","title":"ModelingToolkitStandardLibrary.Blocks.Sqrt","text":"Sqrt(;name)\n\nOutput the square root of the input (input >= 0 required).\n\n\n\n\n\n","category":"function"},{"location":"API/blocks/#ModelingToolkitStandardLibrary.Blocks.Sin","page":"Blocks","title":"ModelingToolkitStandardLibrary.Blocks.Sin","text":"Sin(;name)\n\nOutput the sine of the input.\n\n\n\n\n\n","category":"function"},{"location":"API/blocks/#ModelingToolkitStandardLibrary.Blocks.Cos","page":"Blocks","title":"ModelingToolkitStandardLibrary.Blocks.Cos","text":"Cos(;name)\n\nOutput the cosine of the input.\n\n\n\n\n\n","category":"function"},{"location":"API/blocks/#ModelingToolkitStandardLibrary.Blocks.Tan","page":"Blocks","title":"ModelingToolkitStandardLibrary.Blocks.Tan","text":"Tan(;name)\n\nOutput the tangent of the input.\n\n\n\n\n\n","category":"function"},{"location":"API/blocks/#ModelingToolkitStandardLibrary.Blocks.Asin","page":"Blocks","title":"ModelingToolkitStandardLibrary.Blocks.Asin","text":"Asin(;name)\n\nOutput the arc sine of the input.\n\n\n\n\n\n","category":"function"},{"location":"API/blocks/#ModelingToolkitStandardLibrary.Blocks.Acos","page":"Blocks","title":"ModelingToolkitStandardLibrary.Blocks.Acos","text":"Acos(;name)\n\nOutput the arc cosine of the input.\n\n\n\n\n\n","category":"function"},{"location":"API/blocks/#ModelingToolkitStandardLibrary.Blocks.Atan","page":"Blocks","title":"ModelingToolkitStandardLibrary.Blocks.Atan","text":"Atan(;name)\n\nOutput the arc tangent of the input.\n\n\n\n\n\n","category":"function"},{"location":"API/blocks/#ModelingToolkitStandardLibrary.Blocks.Atan2","page":"Blocks","title":"ModelingToolkitStandardLibrary.Blocks.Atan2","text":"Atan2(;name)\n\nOutput the arc tangent of the input.\n\n\n\n\n\n","category":"function"},{"location":"API/blocks/#ModelingToolkitStandardLibrary.Blocks.Sinh","page":"Blocks","title":"ModelingToolkitStandardLibrary.Blocks.Sinh","text":"Sinh(;name)\n\nOutput the hyperbolic sine of the input.\n\n\n\n\n\n","category":"function"},{"location":"API/blocks/#ModelingToolkitStandardLibrary.Blocks.Cosh","page":"Blocks","title":"ModelingToolkitStandardLibrary.Blocks.Cosh","text":"Cosh(;name)\n\nOutput the hyperbolic cosine of the input.\n\n\n\n\n\n","category":"function"},{"location":"API/blocks/#ModelingToolkitStandardLibrary.Blocks.Tanh","page":"Blocks","title":"ModelingToolkitStandardLibrary.Blocks.Tanh","text":"Tanh(;name)\n\nOutput the hyperbolic tangent of the input.\n\n\n\n\n\n","category":"function"},{"location":"API/blocks/#ModelingToolkitStandardLibrary.Blocks.Exp","page":"Blocks","title":"ModelingToolkitStandardLibrary.Blocks.Exp","text":"Exp(;name)\n\nOutput the exponential (base e) of the input.\n\n\n\n\n\n","category":"function"},{"location":"API/blocks/#ModelingToolkitStandardLibrary.Blocks.Log","page":"Blocks","title":"ModelingToolkitStandardLibrary.Blocks.Log","text":"Log(;name)\n\nOutput the natural (base e) logarithm of the input.\n\n\n\n\n\n","category":"function"},{"location":"API/blocks/#ModelingToolkitStandardLibrary.Blocks.Log10","page":"Blocks","title":"ModelingToolkitStandardLibrary.Blocks.Log10","text":"Log10(;name)\n\nOutput the base 10 logarithm of the input.\n\n\n\n\n\n","category":"function"},{"location":"API/blocks/#Source-Blocks","page":"Blocks","title":"Source Blocks","text":"","category":"section"},{"location":"API/blocks/","page":"Blocks","title":"Blocks","text":"Constant\nSine\nCosine\nContinuousClock\nRamp\nStep\nExpSine","category":"page"},{"location":"API/blocks/#ModelingToolkitStandardLibrary.Blocks.Constant","page":"Blocks","title":"ModelingToolkitStandardLibrary.Blocks.Constant","text":"Generate constant signal.\n\nParameters:\n\nk: Constant output value\n\n\n\n\n\n","category":"function"},{"location":"API/blocks/#ModelingToolkitStandardLibrary.Blocks.Sine","page":"Blocks","title":"ModelingToolkitStandardLibrary.Blocks.Sine","text":"Generate sine signal.\n\nParameters:\n\nfrequency: [Hz] Frequency of sine wave\namplitude: Amplitude of sine wave\nphase: [rad] Phase of sine wave \noffset: Offset of output signal\nstart_time: [s] Output y = offset for t < start_time\n\n\n\n\n\n","category":"function"},{"location":"API/blocks/#ModelingToolkitStandardLibrary.Blocks.Cosine","page":"Blocks","title":"ModelingToolkitStandardLibrary.Blocks.Cosine","text":"Generate cosine signal.\n\nParameters:\n\nfrequency: [Hz] Frequency of sine wave\namplitude: Amplitude of sine wave\nphase: [rad] Phase of sine wave \noffset: Offset of output signal\nstart_time: [s] Output y = offset for t < start_time\n\n\n\n\n\n","category":"function"},{"location":"API/blocks/#ModelingToolkitStandardLibrary.Blocks.ContinuousClock","page":"Blocks","title":"ModelingToolkitStandardLibrary.Blocks.ContinuousClock","text":"Generate current time signal.\n\nParameters:\n\noffset: Offset of output signal\nstart_time: [s] Output y = offset for t < start_time\n\n\n\n\n\n","category":"function"},{"location":"API/blocks/#ModelingToolkitStandardLibrary.Blocks.Ramp","page":"Blocks","title":"ModelingToolkitStandardLibrary.Blocks.Ramp","text":"Generate ramp signal.\n\nParameters:\n\nheight: Height of ramp\nduration: [s] Duration of ramp (= 0.0 gives a Step)\noffset: Offset of output signal\nstart_time: [s] Output y = offset for t < start_time\n\n\n\n\n\n","category":"function"},{"location":"API/blocks/#ModelingToolkitStandardLibrary.Blocks.Step","page":"Blocks","title":"ModelingToolkitStandardLibrary.Blocks.Step","text":"Generate step signal.\n\nParameters:\n\nheight: Height of step\noffset: Offset of output signal\nstart_time: [s] Output y = offset for t < start_time\n\n\n\n\n\n","category":"function"},{"location":"API/blocks/#ModelingToolkitStandardLibrary.Blocks.ExpSine","page":"Blocks","title":"ModelingToolkitStandardLibrary.Blocks.ExpSine","text":"Generate exponentially damped sine signal.\n\nParameters:\n\nfrequency: [Hz] Frequency of sine wave\namplitude: Amplitude of sine wave\ndamping: [1/s] Damping coefficient of sine wave\nphase: [rad] Phase of sine wave \noffset: Offset of output signal\nstart_time: [s] Output y = offset for t < start_time\n\n\n\n\n\n","category":"function"},{"location":"API/blocks/#Nonlinear-Blocks","page":"Blocks","title":"Nonlinear Blocks","text":"","category":"section"},{"location":"API/blocks/","page":"Blocks","title":"Blocks","text":"Limiter\nDeadZone\nSlewRateLimiter","category":"page"},{"location":"API/blocks/#ModelingToolkitStandardLibrary.Blocks.Limiter","page":"Blocks","title":"ModelingToolkitStandardLibrary.Blocks.Limiter","text":"Limit the range of a signal.\n\nParameters:\n\ny_max: Maximum of output signal\ny_min: Minimum of output signal\n\n\n\n\n\n","category":"function"},{"location":"API/blocks/#ModelingToolkitStandardLibrary.Blocks.DeadZone","page":"Blocks","title":"ModelingToolkitStandardLibrary.Blocks.DeadZone","text":"DeadZone(; u_max, u_min=-u_max, name)\n\nThe DeadZone block defines a region of zero output. If the input is within uMin ... uMax, the output is zero. Outside of this zone, the output is a linear function of the input with a slope of 1.\n\n       yâ²\n        â     /\n        â    /\n  u_min â   /\nâââââ|âââ¼ââ|ââââââââº u\n    /   â   u_max\n   /    â\n  /     â\n\n\n\n\n\n","category":"function"},{"location":"API/blocks/#ModelingToolkitStandardLibrary.Blocks.SlewRateLimiter","page":"Blocks","title":"ModelingToolkitStandardLibrary.Blocks.SlewRateLimiter","text":"SlewRateLimiter(;name, rising=1, falling=-rising, Td=0.001, y_start=0.0)\n\nLimits the slew rate of a signal.\n\nParameters:\n\nRising: Maximum rising slew rate\nfalling: Maximum falling slew rate\nTd: Derivative time constant\n\n\n\n\n\n","category":"function"},{"location":"API/blocks/#Continuous-Blocks","page":"Blocks","title":"Continuous Blocks","text":"","category":"section"},{"location":"API/blocks/","page":"Blocks","title":"Blocks","text":"Integrator\nDerivative\nFirstOrder\nSecondOrder\nStateSpace\nPI\nLimPI\nPID\nLimPID","category":"page"},{"location":"API/blocks/#ModelingToolkitStandardLibrary.Blocks.Integrator","page":"Blocks","title":"ModelingToolkitStandardLibrary.Blocks.Integrator","text":"Integrator(;name, k=1, x_start=0.0)\n\nOutputs y = â«k*u dt, corresponding to the transfer function 1/s.\n\n\n\n\n\n","category":"function"},{"location":"API/blocks/#ModelingToolkitStandardLibrary.Blocks.Derivative","page":"Blocks","title":"ModelingToolkitStandardLibrary.Blocks.Derivative","text":"Derivative(; name, k=1, T, x_start=0.0)\n\nOutputs an approximate derivative of the input. The transfer function of this block is\n\nk       k     \nâ - ââââââââââ\nT    2 â    1â\n    T ââs + ââ\n       â    Tâ \n\nand a state-space realization is given by ss(-1/T, 1/T, -k/T, k/T) where T is the time constant of the filter. A smaller T leads to a more ideal approximation of the derivative.\n\nParameters:\n\nk: Gain\nT: [s] Time constants (T>0 required; T=0 is ideal derivative block)\nx_start: Initial value of state\n\n\n\n\n\n","category":"function"},{"location":"API/blocks/#ModelingToolkitStandardLibrary.Blocks.FirstOrder","page":"Blocks","title":"ModelingToolkitStandardLibrary.Blocks.FirstOrder","text":"FirstOrder(; name, k=1, T, x_start=0.0)\n\nA first-order filter with a single real pole in s = -T and gain k. The transfer function is given by Y(s)/U(s) =\n\n   k   \nâââââââ\nsT + 1\n\nParameters:\n\nk: Gain\nT: [s] Time constants (T>0 required)\nx_start: Initial value of state\n\n\n\n\n\n","category":"function"},{"location":"API/blocks/#ModelingToolkitStandardLibrary.Blocks.SecondOrder","page":"Blocks","title":"ModelingToolkitStandardLibrary.Blocks.SecondOrder","text":"SecondOrder(; name, k=1, w, d, x_start=0.0, xd_start=0.0)\n\nA second-order filter with gain k, a bandwidth of w rad/s and relative damping d. The transfer function is given by Y(s)/U(s) =\n\n      k*w^2   \nâââââââââââââââââ\nsÂ² + 2d*w*s + w^2\n\nCritical damping corresponds to d=1, which yields the fastest step response without overshoot, d < 1results in an under-damped filter whiled > 1results in an over-damped filter.d = 1/â2` corresponds to a Butterworth filter of order 2 (maximally flat frequency response).\n\nParameters:\n\nk: Gain\nw: Angular frequency\nd: Damping\nx_start: Initial value of state (output)\nxd_start: Initial value of derivative of state (output)\n\n\n\n\n\n","category":"function"},{"location":"API/blocks/#ModelingToolkitStandardLibrary.Blocks.StateSpace","page":"Blocks","title":"ModelingToolkitStandardLibrary.Blocks.StateSpace","text":"StateSpace(A, B, C, D=0; x_start=zeros(size(A,1)), name)\n\nA linear, time-invariant state-space system on the form.\n\nxÌ = Ax + Bu\ny = Cx + Du\n\nTransfer functions can also be simulated by converting them to a StateSpace form.\n\n\n\n\n\n","category":"function"},{"location":"API/blocks/#ModelingToolkitStandardLibrary.Blocks.PI","page":"Blocks","title":"ModelingToolkitStandardLibrary.Blocks.PI","text":"PI(;name, k=1, T, x_start=0.0)\n\nTextbook version of a PI-controller without actuator saturation and anti-windup measure.\n\nParameters:\n\nk: Gain\nT: [s] Integrator time constant (T>0 required)\nx_start: Initial value for the integrator\n\n\n\n\n\n","category":"function"},{"location":"API/blocks/#ModelingToolkitStandardLibrary.Blocks.LimPI","page":"Blocks","title":"ModelingToolkitStandardLibrary.Blocks.LimPI","text":"LimPI(;name, k=1, T, u_max=1, u_min=-u_max, Ta)\n\nText-book version of a PI-controller with actuator saturation and anti-windup measure.\n\nParameters:\n\nk: Gain\nT: [s] Integrator time constant (T>0 required)\nTa: [s] Tracking time constant (Ta>0 required)\nx_start: Initial value for the integrator\n\n\n\n\n\n","category":"function"},{"location":"API/blocks/#ModelingToolkitStandardLibrary.Blocks.PID","page":"Blocks","title":"ModelingToolkitStandardLibrary.Blocks.PID","text":"PID(;name, k=1, Ti=false, Td=false, Nd=10, xi_start=0, xd_start=0)\n\nText-book version of a PID-controller without actuator saturation and anti-windup measure.\n\nParameters:\n\nk: Gain\nTi: [s] Integrator time constant (Ti>0 required). If set to false no integral action is used.\nTd: [s] Derivative time constant (Td>0 required). If set to false no derivative action is used.\nNd: [s] Time constant for the derivative approximation (Nd>0 required; Nd=0 is ideal derivative).\nx_start: Initial value for the integrator.\nxd_start: Initial value for the derivative state.\n\n\n\n\n\n","category":"function"},{"location":"API/blocks/#ModelingToolkitStandardLibrary.Blocks.LimPID","page":"Blocks","title":"ModelingToolkitStandardLibrary.Blocks.LimPID","text":"PID(; k, Ti=false, Td=false, wp=1, wd=1, Ni, Nd=12, y_max=Inf, y_min=-y_max, gains = false, name)\n\nProportional-Integral-Derivative (PID) controller with output saturation, set-point weighting and integrator anti-windup.\n\nThis block has inputs\n\nu_r reference/set point\nu_y measurement signal\n\nand output y corresponding to the control signal.\n\nThe equation for the control signal is roughly\n\nk(ep + 1/Ti * â«e + 1/Td * d/dt(ed))\ne = u_r - u_y\nep = wp*u_r - u_y\ned = wd*u_r - u_y\n\nwhere the transfer function for the derivative includes additional filtering, see ? Derivative for more details.\n\nk: Proportional gain\nTi: Integrator time constant. Set to false to turn off integral action.\nTd: Derivative time constant. Set to false to turn off derivative action.\nwp: Set-point weighting in the proportional part.\nwd: Set-point weighting in the derivative part.\nNd: Derivative limit, limits the derivative gain to Nd/Td. Reasonable values are â [8, 20]. A higher value gives a better approximation of an ideal derivative at the expense of higher noise amplification.\nNi: Ni*Ti controls the time constant Tâ of anti-windup tracking. A common (default) choice is Tâ = â(Ti*Td) which is realized by Ni = â(Td / Ti). Anti-windup can be effectively turned off by setting Ni = Inf.\n\ngains: Ifgains = true,TiandTdwill be interpreted as gains with a fundamental PID transfer function on parallel formki=Ti, kd=Td, k + ki/s + kd*s`\n\n\n\n\n\n","category":"function"},{"location":"API/magnetic/#ModelingToolkitStandardLibrary:-Magnetic-Components","page":"Magnetic Components","title":"ModelingToolkitStandardLibrary: Magnetic Components","text":"","category":"section"},{"location":"API/magnetic/#Flux-Tubes","page":"Magnetic Components","title":"Flux Tubes","text":"","category":"section"},{"location":"API/magnetic/#Flux-Tube-Utilities","page":"Magnetic Components","title":"Flux Tube Utilities","text":"","category":"section"},{"location":"API/magnetic/","page":"Magnetic Components","title":"Magnetic Components","text":"PositiveMagneticPort\nNegativeMagneticPort\nTwoPort","category":"page"},{"location":"API/magnetic/#ModelingToolkitStandardLibrary.Magnetic.FluxTubes.PositiveMagneticPort","page":"Magnetic Components","title":"ModelingToolkitStandardLibrary.Magnetic.FluxTubes.PositiveMagneticPort","text":"Positive magnetic port\n\n\n\n\n\n","category":"function"},{"location":"API/magnetic/#ModelingToolkitStandardLibrary.Magnetic.FluxTubes.NegativeMagneticPort","page":"Magnetic Components","title":"ModelingToolkitStandardLibrary.Magnetic.FluxTubes.NegativeMagneticPort","text":"Negative magnetic port\n\n\n\n\n\n","category":"function"},{"location":"API/magnetic/#ModelingToolkitStandardLibrary.Magnetic.FluxTubes.TwoPort","page":"Magnetic Components","title":"ModelingToolkitStandardLibrary.Magnetic.FluxTubes.TwoPort","text":"TwoPort(;name, V_m_start=0.0, Phi_start=0.0)\n\nPartial component with magnetic potential difference between two magnetic ports p and n and magnetic flux Phi from p to n.\n\nParameters:\n\nV_m_start: Initial magnetic potential difference between both ports\nPhi_start: Initial magnetic flux from portp to portn\n\n\n\n\n\n","category":"function"},{"location":"API/magnetic/#Basic-Flux-Tube-Blocks","page":"Magnetic Components","title":"Basic Flux Tube Blocks","text":"","category":"section"},{"location":"API/magnetic/","page":"Magnetic Components","title":"Magnetic Components","text":"Ground\nIdle\nShort\nCrossing\nConstantPermeance\nConstantReluctance\nEddyCurrent\nElectroMagneticConverter","category":"page"},{"location":"API/magnetic/#ModelingToolkitStandardLibrary.Magnetic.FluxTubes.Idle","page":"Magnetic Components","title":"ModelingToolkitStandardLibrary.Magnetic.FluxTubes.Idle","text":"Idle(;name)\n\nIdle running branch.\n\n\n\n\n\n","category":"function"},{"location":"API/magnetic/#ModelingToolkitStandardLibrary.Magnetic.FluxTubes.Crossing","page":"Magnetic Components","title":"ModelingToolkitStandardLibrary.Magnetic.FluxTubes.Crossing","text":"Crossing(;name)\n\nCrossing of two branches.\n\nThis is a simple crossing of two branches. The ports portp1 and portp2 are connected, as well as portn1 and portn2.\n\n\n\n\n\n","category":"function"},{"location":"API/magnetic/#ModelingToolkitStandardLibrary.Magnetic.FluxTubes.ConstantPermeance","page":"Magnetic Components","title":"ModelingToolkitStandardLibrary.Magnetic.FluxTubes.ConstantPermeance","text":"ConstantPermeance(;name, G_m=1.0)\n\nConstant permeance.\n\nParameters:\n\nG_m: [H] Magnetic permeance\n\n\n\n\n\n","category":"function"},{"location":"API/magnetic/#ModelingToolkitStandardLibrary.Magnetic.FluxTubes.ConstantReluctance","page":"Magnetic Components","title":"ModelingToolkitStandardLibrary.Magnetic.FluxTubes.ConstantReluctance","text":"ConstantReluctance(;name, R_m=1.0)\n\nConstant reluctance.\n\nParameters:\n\nR_m: [H^-1] Magnetic reluctance\n\n\n\n\n\n","category":"function"},{"location":"API/magnetic/#ModelingToolkitStandardLibrary.Magnetic.FluxTubes.EddyCurrent","page":"Magnetic Components","title":"ModelingToolkitStandardLibrary.Magnetic.FluxTubes.EddyCurrent","text":"EddyCurrent(;name, rho=0.098e-6, l=1, A=1, Phi_start=0.0)\n\nFor modelling of eddy current in a conductive magnetic flux tube.\n\nParameters:\n\nrho: [ohm * m] Resistivity of flux tube material (default: Iron at 20degC)\nl: [m] Average length of eddy current path\nA: [m^2] Cross sectional area of eddy current path\nPhi_start: [Wb] Initial magnetic flux flowing into the port_p\n\n\n\n\n\n","category":"function"},{"location":"API/magnetic/#ModelingToolkitStandardLibrary.Magnetic.FluxTubes.ElectroMagneticConverter","page":"Magnetic Components","title":"ModelingToolkitStandardLibrary.Magnetic.FluxTubes.ElectroMagneticConverter","text":"ElectroMagneticConverter(;name, N, Phi_start=0.0)\n\nIdeal electromagnetic energy conversion.\n\nThe electromagnetic energy conversion is given by Ampere's law and Faraday's law respectively V_m = N * i N * dÎ¦/dt = -v\n\nParameters:\n\nN: Number of turns\nPhi_start: [Wb] Initial magnetic flux flowing into the port_p\n\n\n\n\n\n","category":"function"},{"location":"API/magnetic/#Flux-Tube-Sources","page":"Magnetic Components","title":"Flux Tube Sources","text":"","category":"section"},{"location":"API/magnetic/","page":"Magnetic Components","title":"Magnetic Components","text":"ConstantMagneticPotentialDifference\nConstantMagneticFlux","category":"page"},{"location":"API/magnetic/#ModelingToolkitStandardLibrary.Magnetic.FluxTubes.ConstantMagneticPotentialDifference","page":"Magnetic Components","title":"ModelingToolkitStandardLibrary.Magnetic.FluxTubes.ConstantMagneticPotentialDifference","text":"Constant magnetomotive force.\n\nParameters:\n\nV_m: [A] Magnetic potential difference\n\n\n\n\n\n","category":"function"},{"location":"API/magnetic/#ModelingToolkitStandardLibrary.Magnetic.FluxTubes.ConstantMagneticFlux","page":"Magnetic Components","title":"ModelingToolkitStandardLibrary.Magnetic.FluxTubes.ConstantMagneticFlux","text":"Source of constant magnetic flux.\n\nParameters:\n\nPhi: [Wb] Magnetic flux\n\n\n\n\n\n","category":"function"},{"location":"API/thermal/#ModelingToolkitStandardLibrary:-Thermal-Components","page":"Thermal Components","title":"ModelingToolkitStandardLibrary: Thermal Components","text":"","category":"section"},{"location":"API/thermal/#Thermal-Utilities","page":"Thermal Components","title":"Thermal Utilities","text":"","category":"section"},{"location":"API/thermal/","page":"Thermal Components","title":"Thermal Components","text":"HeatPort","category":"page"},{"location":"API/thermal/#ModelingToolkitStandardLibrary.Thermal.HeatPort","page":"Thermal Components","title":"ModelingToolkitStandardLibrary.Thermal.HeatPort","text":"Port for a thermal system.\n\n\n\n\n\n","category":"function"},{"location":"API/thermal/#Thermal-Components","page":"Thermal Components","title":"Thermal Components","text":"","category":"section"},{"location":"API/thermal/","page":"Thermal Components","title":"Thermal Components","text":"BodyRadiation\nConvectiveConductor\nConvectiveResistor\nHeatCapacitor\nThermalConductor\nThermalResistor\nThermalCollector","category":"page"},{"location":"API/thermal/#ModelingToolkitStandardLibrary.Thermal.BodyRadiation","page":"Thermal Components","title":"ModelingToolkitStandardLibrary.Thermal.BodyRadiation","text":"BodyRadiation(; name, G=1.0)\n\nLumped thermal element for radiation heat transfer.\n\nParameters:\n\nG: [m^2] Net radiation conductance between two surfaces\n\n\n\n\n\n","category":"function"},{"location":"API/thermal/#ModelingToolkitStandardLibrary.Thermal.ConvectiveConductor","page":"Thermal Components","title":"ModelingToolkitStandardLibrary.Thermal.ConvectiveConductor","text":"ConvectiveConductor(; name, G=1.0)\n\nLumped thermal element for heat convection.\n\nParameters:\n\nG: [W/K] Convective thermal conductance\n\n\n\n\n\n","category":"function"},{"location":"API/thermal/#ModelingToolkitStandardLibrary.Thermal.ConvectiveResistor","page":"Thermal Components","title":"ModelingToolkitStandardLibrary.Thermal.ConvectiveResistor","text":"ConvectiveResistor(; name, R=1.0)\n\nLumped thermal element for heat convection.\n\nParameters:\n\nR: [K/W] Constant thermal resistance of material\n\n\n\n\n\n","category":"function"},{"location":"API/thermal/#ModelingToolkitStandardLibrary.Thermal.HeatCapacitor","page":"Thermal Components","title":"ModelingToolkitStandardLibrary.Thermal.HeatCapacitor","text":"HeatCapacitor(; name, C=1.0, T_start=293.15 + 20)\n\nLumped thermal element storing heat\n\nParameters:\n\nC: [J/K] Heat capacity of element (= cp*m)\nT_start: Initial temperature of element\n\n\n\n\n\n","category":"function"},{"location":"API/thermal/#ModelingToolkitStandardLibrary.Thermal.ThermalConductor","page":"Thermal Components","title":"ModelingToolkitStandardLibrary.Thermal.ThermalConductor","text":"ThermalConductor(;name, G=1.0)\n\nLumped thermal element transporting heat without storing it.\n\nParameters:\n\nG: [W/K] Constant thermal conductance of material\n\n\n\n\n\n","category":"function"},{"location":"API/thermal/#ModelingToolkitStandardLibrary.Thermal.ThermalResistor","page":"Thermal Components","title":"ModelingToolkitStandardLibrary.Thermal.ThermalResistor","text":"ThermalResistor(; name, R=1.0)\n\nLumped thermal element transporting heat without storing it.\n\nParameters:\n\nR: [K/W] Constant thermal resistance of material\n\n\n\n\n\n","category":"function"},{"location":"API/thermal/#ModelingToolkitStandardLibrary.Thermal.ThermalCollector","page":"Thermal Components","title":"ModelingToolkitStandardLibrary.Thermal.ThermalCollector","text":"ThermalCollector(; name, m=1)\n\nCollects m heat flows\n\nThis is a model to collect the heat flows from m heatports to one single heatport.\n\nParameters:\n\nm: Number of heat ports (e.g. m=2: port_a1, port_a2)\n\n\n\n\n\n","category":"function"},{"location":"API/thermal/#Thermal-Sensors","page":"Thermal Components","title":"Thermal Sensors","text":"","category":"section"},{"location":"API/thermal/","page":"Thermal Components","title":"Thermal Components","text":"RelativeTemperatureSensor\nHeatFlowSensor\nTemperatureSensor","category":"page"},{"location":"API/thermal/#ModelingToolkitStandardLibrary.Thermal.RelativeTemperatureSensor","page":"Thermal Components","title":"ModelingToolkitStandardLibrary.Thermal.RelativeTemperatureSensor","text":"RelativeTemperatureSensor(; name)\n\nRelative Temperature sensor.\n\nThe relative temperature port_a.T - port_b.T is determined between the two ports of this component and is provided as  output signal in kelvin.\n\n\n\n\n\n","category":"function"},{"location":"API/thermal/#ModelingToolkitStandardLibrary.Thermal.HeatFlowSensor","page":"Thermal Components","title":"ModelingToolkitStandardLibrary.Thermal.HeatFlowSensor","text":"HeatFlowSensor(; name)\n\nHeat flow rate sensor.\n\nThis model is capable of monitoring the heat flow rate flowing through this component. The sensed value of heat flow rate is the amount that passes through this sensor while keeping the temperature drop across the sensor zero. This is an ideal  model so it does not absorb any energy and it has no direct effect on the thermal response of a system it is included in. The output signal is positive, if the heat flows from port_a to port_b.\n\n\n\n\n\n","category":"function"},{"location":"API/thermal/#ModelingToolkitStandardLibrary.Thermal.TemperatureSensor","page":"Thermal Components","title":"ModelingToolkitStandardLibrary.Thermal.TemperatureSensor","text":"TemperatureSensor(; name)\n\nAbsolute temperature sensor in kelvin.\n\nThis is an ideal absolute temperature sensor which returns the temperature of the connected port in kelvin as an output signal. The sensor itself has no thermal interaction with whatever it is connected to. Furthermore, no thermocouple-like  lags are associated with this sensor model.\n\n\n\n\n\n","category":"function"},{"location":"API/thermal/#Thermal-Sources","page":"Thermal Components","title":"Thermal Sources","text":"","category":"section"},{"location":"API/thermal/","page":"Thermal Components","title":"Thermal Components","text":"FixedHeatFlow\nFixedTemperature\nThermalGround ","category":"page"},{"location":"API/thermal/#ModelingToolkitStandardLibrary.Thermal.FixedHeatFlow","page":"Thermal Components","title":"ModelingToolkitStandardLibrary.Thermal.FixedHeatFlow","text":"FixedHeatFlow(; name, Q_flow=1.0, T_ref=293.15, alpha=0.0)\n\nFixed heat flow boundary condition.\n\nThis model allows a specified amount of heat flow rate to be \"injected\" into a thermal system at a given port. The constant amount of heat flow rate Q_flow is given as a parameter. The heat flows into the component to which the component FixedHeatFlow is connected, if parameter Q_flow is positive.\n\nParameters:\n\nQ_flow: [W] Fixed heat flow rate at port\nT_ref: [K] Reference temperature\nalpha: [1/K] Temperature coefficient of heat flow rate\n\n\n\n\n\n","category":"function"},{"location":"API/thermal/#ModelingToolkitStandardLibrary.Thermal.FixedTemperature","page":"Thermal Components","title":"ModelingToolkitStandardLibrary.Thermal.FixedTemperature","text":"FixedTemperature(; name, T=0.0)\n\nFixed temperature boundary condition in kelvin.\n\nThis model defines a fixed temperature T at its port in kelvin, i.e., it defines a fixed temperature as a boundary condition.\n\nParameters:\n\nT: [K] Fixed temperature boundary condition\n\n\n\n\n\n","category":"function"},{"location":"API/mechanical/#ModelingToolkit-Standard-Library:-Mechanical-Components","page":"ModelingToolkit Standard Library: Mechanical Components","title":"ModelingToolkit Standard Library: Mechanical Components","text":"","category":"section"},{"location":"API/mechanical/#Rotational-Components","page":"ModelingToolkit Standard Library: Mechanical Components","title":"Rotational Components","text":"","category":"section"},{"location":"API/mechanical/#Rotational-Utils","page":"ModelingToolkit Standard Library: Mechanical Components","title":"Rotational Utils","text":"","category":"section"},{"location":"API/mechanical/","page":"ModelingToolkit Standard Library: Mechanical Components","title":"ModelingToolkit Standard Library: Mechanical Components","text":"Flange","category":"page"},{"location":"API/mechanical/#Rotational-Core-Components","page":"ModelingToolkit Standard Library: Mechanical Components","title":"Rotational Core Components","text":"","category":"section"},{"location":"API/mechanical/","page":"ModelingToolkit Standard Library: Mechanical Components","title":"ModelingToolkit Standard Library: Mechanical Components","text":"Fixed\nInertia\nSpring\nDamper\nIdealGear","category":"page"},{"location":"API/mechanical/#Rotational-Sources","page":"ModelingToolkit Standard Library: Mechanical Components","title":"Rotational Sources","text":"","category":"section"},{"location":"API/mechanical/","page":"ModelingToolkit Standard Library: Mechanical Components","title":"ModelingToolkit Standard Library: Mechanical Components","text":"Torque","category":"page"},{"location":"#ModelingToolkitStandardLibrary.jl","page":"ModelingToolkitStandardLibrary.jl: A Standard Library for ModelingToolkit","title":"ModelingToolkitStandardLibrary.jl","text":"","category":"section"},{"location":"","page":"ModelingToolkitStandardLibrary.jl: A Standard Library for ModelingToolkit","title":"ModelingToolkitStandardLibrary.jl: A Standard Library for ModelingToolkit","text":"ModelingToolkitStandardLibrary.jl is a standard library for the  ModelingToolkit acasual modeling system.","category":"page"},{"location":"#Installation","page":"ModelingToolkitStandardLibrary.jl: A Standard Library for ModelingToolkit","title":"Installation","text":"","category":"section"},{"location":"","page":"ModelingToolkitStandardLibrary.jl: A Standard Library for ModelingToolkit","title":"ModelingToolkitStandardLibrary.jl: A Standard Library for ModelingToolkit","text":"Assuming that you already have Julia correctly installed, it suffices to import ModelingToolkitStandardLibrary.jl in the standard way:","category":"page"},{"location":"","page":"ModelingToolkitStandardLibrary.jl: A Standard Library for ModelingToolkit","title":"ModelingToolkitStandardLibrary.jl: A Standard Library for ModelingToolkit","text":"import Pkg; Pkg.add(\"ModelingToolkitStandardLibrary\")","category":"page"},{"location":"#Tutorials","page":"ModelingToolkitStandardLibrary.jl: A Standard Library for ModelingToolkit","title":"Tutorials","text":"","category":"section"},{"location":"","page":"ModelingToolkitStandardLibrary.jl: A Standard Library for ModelingToolkit","title":"ModelingToolkitStandardLibrary.jl: A Standard Library for ModelingToolkit","text":"RC Circuit Tutorial","category":"page"},{"location":"#Libraries","page":"ModelingToolkitStandardLibrary.jl: A Standard Library for ModelingToolkit","title":"Libraries","text":"","category":"section"},{"location":"","page":"ModelingToolkitStandardLibrary.jl: A Standard Library for ModelingToolkit","title":"ModelingToolkitStandardLibrary.jl: A Standard Library for ModelingToolkit","text":"The following are the constituant libraries of the ModelingToolkit Standard Library.","category":"page"},{"location":"","page":"ModelingToolkitStandardLibrary.jl: A Standard Library for ModelingToolkit","title":"ModelingToolkitStandardLibrary.jl: A Standard Library for ModelingToolkit","text":"Basic Blocks\nElectrical Components\nMagnetic Components\nMechanical Components\nThermal Components","category":"page"}]
}
